
import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author 84978
 */
public class AddNewOrder extends javax.swing.JPanel {
    
    private static double TongTien =0;
    
    /**
     * Creates new form AddNewOrder
     */
    public AddNewOrder() {
        initComponents();
        LoadMaKHCBox();
        LoadMaSPCBox();
        String MaHD = new Helper().generateUniqueInvoiceId();
        MaHDTxt.setText(MaHD);
        
    }
    public void LoadMaKHCBox(){
        try{
            ResultSet r = new DBUpdater().getCustomerID();
            while (r.next()){
                String makh = r.getString("MAKH");
                MaKHCBox.addItem(makh);
            } 
            AutoCompletion.enable(MaKHCBox);
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    public void LoadMaSPCBox(){
        try{
            ResultSet r = new DBUpdater().getSuppliesID();
            while (r.next()){
                String masp = r.getString("MASP");
                MaSPCBox.addItem(masp);
            } 
            AutoCompletion.enable(MaSPCBox);
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        MaHDTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        MaKHCBox = new javax.swing.JComboBox<>();
        ThemKHBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        MaSPCBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        SoLuongTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        GiaGiamTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ThanhTienTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        AddBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(31, 34, 46));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mã hoá đơn");

        MaHDTxt.setEditable(false);
        MaHDTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Mã khách hàng");

        MaKHCBox.setEditable(true);
        MaKHCBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        ThemKHBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ThemKHBtn.setText("Thêm KH");
        ThemKHBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ThemKHBtnMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mã sản phẩm");

        MaSPCBox.setEditable(true);
        MaSPCBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Số lượng");

        SoLuongTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SoLuongTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SoLuongTxtKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Giá giảm");

        GiaGiamTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        GiaGiamTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                GiaGiamTxtKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Thành tiền");

        ThanhTienTxt.setEditable(false);
        ThanhTienTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hoá đơn", "Mã khách hàng", "Mã sản phẩm", "Số lượng", "Giá bán", "Giá giảm"
            }
        ));
        jTable1.setRowHeight(40);
        jScrollPane1.setViewportView(jTable1);

        AddBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AddBtn.setText("Thêm");
        AddBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddBtnMouseClicked(evt);
            }
        });

        DeleteBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteBtn.setText("Xoá");
        DeleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MaHDTxt)
                            .addComponent(MaKHCBox, 0, 250, Short.MAX_VALUE)
                            .addComponent(MaSPCBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(ThemKHBtn)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ThanhTienTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(SoLuongTxt)
                            .addComponent(GiaGiamTxt))))
                .addContainerGap(73, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MaHDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(SoLuongTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(MaKHCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThemKHBtn)
                    .addComponent(jLabel5)
                    .addComponent(GiaGiamTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(MaSPCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(ThanhTienTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddBtn)
                    .addComponent(DeleteBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ThemKHBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThemKHBtnMouseClicked
        AddNewCustomer customer = new AddNewCustomer();
        JPanel jp = new JPanel();
        jp.setPreferredSize(new java.awt.Dimension(500, 40));
        jp.setBackground(new java.awt.Color(31,34,46));
        JButton OKBtn = new JButton("OK");
        OKBtn.setFont(new Font("Tahoma", Font.BOLD,14));
        OKBtn.setPreferredSize(new java.awt.Dimension(97, 25));
        JButton CacelBtn = new JButton("Huỷ");
        CacelBtn.setFont(new Font("Tahoma", Font.BOLD,14));
        CacelBtn.setPreferredSize(new java.awt.Dimension(97, 25));
        
        jp.add(OKBtn);
        jp.add(CacelBtn);
        
        JDialog dialog = new JDialog();
        
        OKBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Boolean flag = customer.addNewCustomer();
                if(flag ==true)
                dialog.dispose();
            }
        });
        CacelBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                
                dialog.dispose();
            }
        });
        
        dialog.getContentPane().setLayout(new BorderLayout());
        dialog.getContentPane( ).add(customer, BorderLayout.CENTER);
        dialog.getContentPane( ).add(jp, BorderLayout.SOUTH);
        dialog.setModal(true);
        dialog.pack();
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dialog.setLocationRelativeTo(null);

        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter()
            {
                public void windowClosing (WindowEvent e)
                {
                    super.windowClosing(e);
                }
            });

    }//GEN-LAST:event_ThemKHBtnMouseClicked

    private void AddBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBtnMouseClicked
        DefaultTableModel dm = (DefaultTableModel)jTable1.getModel();
        String MaHD =MaHDTxt.getText();
        String MaKH = MaKHCBox.getSelectedItem().toString();
        String MaSP = MaSPCBox.getSelectedItem().toString();
        String soluong = SoLuongTxt.getText();
        int SoLuong =0;
        Boolean flag =true;
        if(soluong.equals("")){
            JOptionPane.showMessageDialog(this, "Nhập số lượng");
            flag =false;
        }
        else{
            try{
            SoLuong = Integer.parseInt(soluong);
            if(SoLuong > new DBUpdater().LaySoLuongTonSanPham(MaSP)){
                JOptionPane.showMessageDialog(this, "Không đủ sản phẩm để cung cấp ");
                flag =false;
            }
            else if(SoLuong ==0 ){
                JOptionPane.showMessageDialog(this, "Nhập số lượng lớn hơn 0 ");
                flag =false;
            }
        }
        catch(Exception e){
            
        }
        }
        
        
        String giagiam = GiaGiamTxt.getText();
        if(giagiam.equals("")){
            JOptionPane.showMessageDialog(this, "Nhập giá giảm ");
            flag =false;
        }
        String giaban = new DBUpdater().getPriceofID(MaSP);
        
        if(flag == true){
            String row[] = new String[]{
                    MaHD,MaKH,MaSP,soluong,giaban,giagiam
                };
            dm.addRow(row);
            float sl=0;
            float gg=0;
                
            try{
                sl =Float.parseFloat(soluong);
                gg=Float.parseFloat(giagiam);
                TongTien+=sl*(Float.parseFloat(giaban)-gg);
            }
            catch(Exception ex){
              ex.printStackTrace();
            }
            ThanhTienTxt.setText(Double.toString(TongTien));
            MaSPCBox.removeItem(MaSP);
            MaKHCBox.disable();
        }
    }//GEN-LAST:event_AddBtnMouseClicked

    private void DeleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteBtnMouseClicked
        if(jTable1.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null, "Chọn 1 chi tiết đơn hàng");
            return;
        }
        String Masp = jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString();
        DefaultTableModel dm = (DefaultTableModel)jTable1.getModel();
        if(dm.getRowCount()>0){
            dm.removeRow(jTable1.getSelectedRow());
            if(dm.getRowCount()==0){
                MaKHCBox.enable();
            }
        }
            
        else{
            JOptionPane.showMessageDialog(null, "Trống");
            
        }
        
        MaSPCBox.addItem(Masp);
        
        
        
    }//GEN-LAST:event_DeleteBtnMouseClicked

    private void SoLuongTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SoLuongTxtKeyTyped
        if(!(Character.isDigit(evt.getKeyChar()))){
                evt.consume();
            }
        int len = SoLuongTxt.getText().length();
        if(len == 10){
           evt.consume(); 
        }
    }//GEN-LAST:event_SoLuongTxtKeyTyped

    private void GiaGiamTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GiaGiamTxtKeyTyped
        if(!(Character.isDigit(evt.getKeyChar()))){
                evt.consume();
            }
        int len = GiaGiamTxt.getText().length();
        if(len == 10){
           evt.consume(); 
        }
    }//GEN-LAST:event_GiaGiamTxtKeyTyped
    public Boolean AddNewInvoice(){
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");  
        LocalDateTime now = LocalDateTime.now();
        String NgayLap = dtf.format(now);
        Boolean flag = true;
        if(! new DBUpdater().AddNewInvoice(MaHDTxt.getText(), MaKHCBox.getSelectedItem().toString(), NgayLap)){
            flag = false;
            
        }
        int numRow = jTable1.getRowCount();
        DefaultTableModel dm = (DefaultTableModel)jTable1.getModel();
        if(dm.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Không có sản phẩm nào");
            return false;
        }
        for(int i =0;i<numRow;i++){
            String MaHD = dm.getValueAt(i, 0).toString();
            String MaSP = dm.getValueAt(i, 2).toString();
            int SoLuong =0;
            double GiaGiam =0;
            try{
                SoLuong = Integer.parseInt(dm.getValueAt(i, 3).toString());
                GiaGiam = Double.parseDouble(dm.getValueAt(i, 5).toString());
            }
            catch(Exception ex){
                ex.printStackTrace();
                
            }
            if(!(new DBUpdater().AddNewInvoiceDetail(MaHD, MaSP, SoLuong, GiaGiam))){
                   flag = false; 
                }
        }
        if(flag == false){
            JOptionPane.showMessageDialog(this, "Lỗi ");
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Thêm thành công ");
            TongTien=0;
            
        }
        return flag;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JTextField GiaGiamTxt;
    private javax.swing.JTextField MaHDTxt;
    private javax.swing.JComboBox<String> MaKHCBox;
    private javax.swing.JComboBox<String> MaSPCBox;
    private javax.swing.JTextField SoLuongTxt;
    private javax.swing.JTextField ThanhTienTxt;
    private javax.swing.JButton ThemKHBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
